---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: angular-snowdrop-me
spec:
  keySize: 2048
  keyAlgorithm: rsa
  dnsNames:
  - angular.snowdrop.me
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-staging
  secretName: angular-snowdrop-me-tls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowdrop-site-angular
  labels:
    app: snowdrop-site-angular
  annotations:
    configmap.fabric8.io/update-on-change: "launcher"
spec:
  selector:
    matchLabels:
      app: snowdrop-site-angular
  template:
    metadata:
      labels:
        app: snowdrop-site-angular
    spec:
      containers:
      - image:  quay.io/snowdrop/angular-site:latest
        imagePullPolicy: Always
        name: snowdrop-site-angular
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: "NODE_ENV"
          value: "production"
        resources: {}
        terminationMessagePath: /dev/termination-log
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 10
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 20

---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: snowdrop-site-angular
  name: snowdrop-site-angular
spec:
  selector:
    app: snowdrop-site-angular
  ports:
  - name: http
    port: 80
    targetPort: 8080 # Container port
    protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
  name: snowdrop-site-angular
spec:
  rules:
    - host: angular.snowdrop.me
      http:
        paths:
          - backend:
              serviceName: snowdrop-site-angular
              servicePort: 80
            path: /
  tls:
    - hosts:
      - angular.snowdrop.me
      secretName: angular-snowdrop-me-tls
