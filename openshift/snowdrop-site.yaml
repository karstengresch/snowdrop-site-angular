apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: snowdrop-site-angular
    spec: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: runtime
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: 'bucharestgold/centos7-s2i-nodejs:10.x'
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: snowdrop-site-angular
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'snowdrop-site-angular:latest'
      postCommit: {}
      resources: {}
      source:
        git:
          uri: 'https://github.com/snowdrop/snowdrop-site-angular'
          ref: 'master'
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'runtime:latest'
          incremental: true
          env:
            - name: "NODE_ENV"
              value: "false"
      triggers:
        - github:
            secret: 'changeme'
          type: GitHub
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
    status:
      lastVersion: 0
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: snowdrop-site-angular
      annotations:
        configmap.fabric8.io/update-on-change: "launcher"
    spec:
      replicas: 1
      selector:
        service: snowdrop-site-angular
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            service: snowdrop-site-angular
        spec:
          containers:
          - image: snowdrop-site-angular
            imagePullPolicy: Always
            name: snowdrop-site-angular
            ports:
            - containerPort: 8080
              protocol: TCP
            env:
            - name: "NODE_ENV"
              value: "production"
            resources: {}
            terminationMessagePath: /dev/termination-log
            readinessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 15
              timeoutSeconds: 10
              periodSeconds: 20
            livenessProbe:
              httpGet:
                path: /
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 10
              periodSeconds: 20
          restartPolicy: Always
          dnsPolicy: ClusterFirst
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - snowdrop-site-angular
          from:
            kind: ImageStreamTag
            name: snowdrop-site-angular:latest
        type: ImageChange
  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        service: snowdrop-site-angular
      name: snowdrop-site-angular
    spec:
      ports:
      - name: "8080"
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        service: snowdrop-site-angular
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        project: snowdrop-site-angular
        provider: nodeshift
      name: snowdrop-site-angular
    spec:
      host: snowdrop.me
      port:
        targetPort: 8080
      to:
        kind: Service
        name: snowdrop-site-angular
